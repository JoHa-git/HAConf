# Lights on before sunset
- alias: 'Valot päälle tuntia ennen aurinkolaskua'
  trigger:
    - platform: sun
      event: sunset
      offset: '-00:30:00'
  condition:
    - condition: time
      after: '14:00:00'
      before: '22:30:00'
  action:
    service: switch.turn_on
    entity_id: switch.tradfri_outlet
#Lights off at 23:00
- alias: 'Valot pois kello 23:10'
  trigger:
    - platform: time
      at: '23:10'
  action:
    - service: switch.turn_off
      entity_id: switch.tradfri_outlet
# Heat pump to fan only when fireplace is hot
- alias: 'Puhallus päälle kun takka on päällä'
  trigger:
    - platform: numeric_state
      entity_id: sensor.takka_temperature
      above: 35
  action:
    - service: climate.set_hvac_mode
      data:
        entity_id: climate.pumppu
        hvac_mode: fan_only
# Heat pump back to heating  when fireplace is cold
- alias: 'Puhallus pois kun takka on kylmä'
  trigger:
    - platform: numeric_state
      entity_id: sensor.takka_temperature
      below: 45
      for: 
       minutes: 1
  condition:
    - condition: state
      entity_id: climate.pumppu
      state: 'fan_only'
  action:
    - service: climate.set_hvac_mode
      data:
        entity_id: climate.pumppu
        hvac_mode: heat     
# Pool pump on when the solar panel is warmer than pool
- alias: 'Aurinkokenno on lämmin'
  trigger:
    - platform: template
      value_template: "{{ states('sensor.aurinkenno_temperature')|float +1 > states('sensor.uima_allas_temperature')|float }}"
  condition:
    - condition: time
      after: '9:00:00'
      before: '21:00:00'
    - condition: state
      entity_id: input_boolean.pumppu
      state: 'off'
  action:
    - service: input_boolean.turn_on
      data:
        entity_id: input_boolean.pumppu
    - service: switch.turn_on
      entity_id: switch.patteri
    - service: telegram_bot.send_message
      data_template:
        title: '*Uima-altaan pumppu päälle*'
        target: !secret telegram_chat3
        message: "Aurinkokenno on {{ states('sensor.aurinkenno_temperature') }} ja uima-allas {{ states('sensor.uima_allas_temperature') }}"
# Pool pump off when it starts to cool the pool
- alias: 'Aurinkokenno jäähdyttää'
  trigger:
    - platform: template
      value_template: "{{ states('sensor.uima_allas_tulo_temperature')|float < states('sensor.uima_allas_temperature')|float }}"
  condition:
    - condition: time
      after: '9:00:00'
      before: '21:00:00'
    - condition: state
      entity_id: input_boolean.pumppu
      state: 'on'
  action:
    - service: input_boolean.turn_off
      data:
        entity_id: input_boolean.pumppu
    - service: switch.turn_off
      entity_id: switch.patteri
    - service: telegram_bot.send_message
      data_template:
        title: '*Uima-altaan pumppu pois päältä*'
        target: !secret telegram_chat3
        message: "Tulo on {{ states('sensor.uima_allas_tulo_temperature') }} ja uima-allas {{ states('sensor.uima_allas_temperature') }}"
# Car heating at the requested time if the garage is cold
- alias: 'Golf lämmitys'
  trigger:
    - platform: state
      entity_id: binary_sensor.golf_0b
      to: 'on'
    - platform: state
      entity_id: binary_sensor.golf_10b
      to: 'on'
    - platform: state
      entity_id: binary_sensor.golf_20b
      to: 'on'
  condition:
    condition: or
    conditions:
      - condition: and
        conditions:    
        - condition: state
          entity_id: binary_sensor.golf_0b
          state: 'on'
        - condition: numeric_state
          entity_id: sensor.autotalli_temperature
          below: 35
        - condition: state
          entity_id: input_boolean.golf
          state: 'on'
      - condition: and
        conditions:    
        - condition: state
          entity_id: binary_sensor.golf_10b
          state: 'on'
        - condition: numeric_state
          entity_id: sensor.autotalli_temperature
          below: 35 
        - condition: state
          entity_id: input_boolean.golf
          state: 'on'
      - condition: and
        conditions:    
        - condition: state
          entity_id: binary_sensor.golf_20b
          state: 'on'
        - condition: numeric_state
          entity_id: sensor.autotalli_temperature
          below: -20
        - condition: state
          entity_id: input_boolean.golf
          state: 'on'
  action:
    - service: switch.turn_on
      entity_id: switch.golf
    - service: telegram_bot.send_message
      data_template:
        title: '*Golf lämmitys päälle*'
        target: !secret telegram_chat3
        message: "Pyydetty lämmitysaika:  {{ states('input_datetime.golf') }} autotallin lämpötila on {{ states('sensor.autotalli_temperature') }}"
    - service:  input_boolean.turn_off
      entity_id: input_boolean.golf
    - service: input_boolean.turn_on
      entity_id: input_boolean.golf_s
# Turning off car heating after hour of requested time
- alias: 'Golf lämmitys pois'
  trigger:
    - platform: state
      entity_id: binary_sensor.golf_sb
      to: 'on'
  condition:
    - condition: state
      entity_id: input_boolean.golf_s
      state: 'on'
  action:
    - service: switch.turn_off
      entity_id: switch.golf
    - service: input_boolean.turn_off
      entity_id: input_boolean.golf_s
    - service: telegram_bot.send_message
      data_template:
        title: '*Golf lämmitys pois*'
        target: !secret telegram_chat3
        message: "Pyydetty lämmitysaika oli:  {{ states('input_datetime.golf') }} autotallin lämpötila on {{ states('sensor.autotalli_temperature') }}"
# Car heating at the requested time if the garage is cold
- alias: 'Octavia lämmitys'
  trigger:
    - platform: state
      entity_id: binary_sensor.octavia_0b
      to: 'on'
    - platform: state
      entity_id: binary_sensor.octavia_10b
      to: 'on'
    - platform: state
      entity_id: binary_sensor.octavia_20b
      to: 'on'
  condition:
    condition: or
    conditions:
      - condition: and
        conditions:    
        - condition: state
          entity_id: binary_sensor.octavia_0b
          state: 'on'
        - condition: numeric_state
          entity_id: sensor.autotalli_temperature
          below: 35
        - condition: state
          entity_id: input_boolean.octavia
          state: 'on'
      - condition: and
        conditions:    
        - condition: state
          entity_id: binary_sensor.octavia_10b
          state: 'on'
        - condition: numeric_state
          entity_id: sensor.autotalli_temperature
          below: 35
        - condition: state
          entity_id: input_boolean.octavia
          state: 'on'
      - condition: and
        conditions:    
        - condition: state
          entity_id: binary_sensor.octavia_20b
          state: 'on'
        - condition: numeric_state
          entity_id: sensor.autotalli_temperature
          below: -20
        - condition: state
          entity_id: input_boolean.octavia
          state: 'on'
  action:
    - service: switch.turn_on
      entity_id: switch.octavia
    - service: telegram_bot.send_message
      data_template:
        title: '*Octavia lämmitys päälle*'
        target: !secret telegram_chat3
        message: "Pyydetty lämmitysaika:  {{ states('input_datetime.octavia') }} autotallin lämpötila on {{ states('sensor.autotalli_temperature') }}"
    - service:  input_boolean.turn_off
      entity_id: input_boolean.octavia
    - service: input_boolean.turn_on
      entity_id: input_boolean.octavia_s
# Turning off car heating after hour of requested time
- alias: 'Octavia lämmitys pois'
  trigger:
    - platform: state
      entity_id: binary_sensor.octavia_sb
      to: 'on'
  condition:
    - condition: state
      entity_id: input_boolean.octavia_s
      state: 'on'
  action:
    - service: switch.turn_off
      entity_id: switch.octavia
    - service: input_boolean.turn_off
      entity_id: input_boolean.octavia_s
    - service: telegram_bot.send_message
      data_template:
        title: '*Octavia lämmitys pois*'
        target: !secret telegram_chat3
        message: "Pyydetty lämmitysaika oli:  {{ states('input_datetime.octavia') }} autotallin lämpötila on {{ states('sensor.autotalli_temperature') }}"
# Heat pump to cooling on evening
- alias: 'Pumppu viilennykselle illalle'
  trigger:
    - platform: time
      at: '23:10'
  condition:
    - condition: time
      after: '21:00:00'
      before: '23:30:00'
  action:
    - service: climate.turn_on
      entity_id: climate.pumppu
    - service: climate.set_temperature
      data:
        entity_id: climate.pumppu
        temperature: 22
    - service: climate.set_hvac_mode
      data:
        entity_id: climate.pumppu
        hvac_mode: cool
#Heat pump off on the morning
- alias: 'Pumppu  pois aamulla'
  trigger:
    - platform: time
      at: '6:00'
  action:
    - service: climate.set_temperature
      data:
        entity_id: climate.pumppu
        temperature: 23
    - service: climate.set_hvac_mode
      data:
        entity_id: climate.pumppu
        hvac_mode: cool   
    - service: climate.turn_off
      entity_id: climate.pumppu